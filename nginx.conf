upstream principal {
  server development_principal_web:3000;
}
server {
  # define your domain  
  listen 80;
  server_name dev.obras.com;

  # define the public application root  
  root   $RAILS_ROOT/public;  
  index  index.html;

  # define where Nginx should write its logs  
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  # block IP
  include /etc/nginx/ip_blocker.conf;

  # deny requests for files that should never be accessed  
  location ~ /\. {    
    deny all;  
  }
  location ~* ^.+\.(rb|log)$ {    
    deny all;  
  }  

  # serve static (compiled) assets directly if they exist (for rails production)  
  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {    
    try_files $uri @rails;     
    access_log on;    
    gzip_static on; 
    # to serve pre-gzipped version     
    expires max;    
    add_header Cache-Control public;     
    
    add_header Last-Modified "";    
    add_header ETag "";    
    break;  
  } 

  # send non-static file requests to the app server  
  location / {    
    try_files $uri @rails;  
  }   
  location @rails {    
    proxy_set_header  X-Real-IP  $remote_addr;    
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;         
    proxy_set_header Host $http_host;    
    proxy_redirect off;    
    proxy_pass http://principal;  
  }
}
server {
  listen 443 ssl;
  server_name dev.obras.com;

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  # define the public application root  
  root   $RAILS_ROOT/public;  
  index  index.html;

  # define where Nginx should write its logs  
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  # block IP
  include /etc/nginx/ip_blocker.conf;

  # deny requests for files that should never be accessed  
  location ~ /\. {    
    deny all;  
  }
  location ~* ^.+\.(rb|log)$ {    
    deny all;  
  }  

  # serve static (compiled) assets directly if they exist (for rails production)  
  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {    
    try_files $uri @rails;     
    access_log on;    
    gzip_static on; 
    # to serve pre-gzipped version     
    expires max;    
    add_header Cache-Control public;     
    
    add_header Last-Modified "";    
    add_header ETag "";    
    break;  
  }

  # send non-static file requests to the app server  
  location / {    
    try_files $uri @rails;  
  }   
  location @rails {    
    proxy_set_header  X-Real-IP  $remote_addr;    
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;         
    proxy_set_header Host $http_host;    
    proxy_redirect off;
    proxy_pass http://principal;  
  }
}
upstream secondary {
  server development_secondary_web:3000;
}
server {
  # define your domain  
  listen 80;
  server_name hom.obras.com;

  # define the public application root  
  root   $RAILS_ROOT/public;  
  index  index.html;

  # define where Nginx should write its logs  
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  # block IP
  include /etc/nginx/ip_blocker.conf;

  # deny requests for files that should never be accessed  
  location ~ /\. {    
    deny all;  
  }
  location ~* ^.+\.(rb|log)$ {    
    deny all;  
  }  

  # serve static (compiled) assets directly if they exist (for rails production)  
  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {    
    try_files $uri @rails;     
    access_log off;    
    gzip_static on; 
    # to serve pre-gzipped version     
    expires max;    
    add_header Cache-Control public;     
    
    add_header Last-Modified "";    
    add_header ETag "";    
    break;  
  } 

  # send non-static file requests to the app server  
  location / {    
    try_files $uri @rails;  
  }   
  location @rails {    
    proxy_set_header  X-Real-IP  $remote_addr;    
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;         
    proxy_set_header Host $http_host;    
    proxy_redirect off;
    proxy_pass http://secondary;  
  }
}
server {
  listen 443 ssl;
  server_name hom.obras.com;

  ssl_certificate /etc/nginx/certs/cert.pem;
  ssl_certificate_key /etc/nginx/certs/key.pem;

  # define the public application root  
  root   $RAILS_ROOT/public;  
  index  index.html;

  # define where Nginx should write its logs  
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  # block IP
  include /etc/nginx/ip_blocker.conf;

  # deny requests for files that should never be accessed  
  location ~ /\. {    
    deny all;  
  }
  location ~* ^.+\.(rb|log)$ {    
    deny all;  
  }  

  # serve static (compiled) assets directly if they exist (for rails production)  
  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system)/   {    
    try_files $uri @rails;     
    access_log off;    
    gzip_static on; 
    # to serve pre-gzipped version     
    expires max;    
    add_header Cache-Control public;     
    
    add_header Last-Modified "";    
    add_header ETag "";    
    break;  
  } 

  # send non-static file requests to the app server  
  location / {    
    try_files $uri @rails;  
  }   
  location @rails {    
    proxy_set_header  X-Real-IP  $remote_addr;    
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;         
    proxy_set_header Host $http_host;    
    proxy_redirect off;
    proxy_pass http://secondary;  
  }
}
